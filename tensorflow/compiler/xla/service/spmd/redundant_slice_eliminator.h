#ifndef TENSORFLOW_COMPILER_XLA_SERVICE_SPMD_REDUNDANT_SLICE_ELIMINATOR_H_
#define TENSORFLOW_COMPILER_XLA_SERVICE_SPMD_REDUNDANT_SLICE_ELIMINATOR_H_

#include "tensorflow/compiler/xla/service/hlo_pass_interface.h"

namespace xla {
namespace spmd {

// Remove the redundant dyanmic-slice generated by SPMD partitioner.
// These dynamic-slice instructions slice constant operands, so they can be
// eliminated.
//
// Before:
// %broadcast.1 = f32[2048]{0} broadcast(f32[] %constant.0), dimensions={}
// %dynamic-slice.2 = f32[512]{0} dynamic-slice(f32[2048]{0} %broadcast.1, s32[]
// %x), dynamic_slice_sizes={512} %y = %dynamic_slice.0
//
// After:
// %y = f32[512]{0} broadcast(f32[] constant.0), dimensions={}

class RedundantSliceEliminator : public HloModulePass {
 public:
  RedundantSliceEliminator() = default;
  ~RedundantSliceEliminator() override = default;
  absl::string_view name() const override {
    return "redundant_slice_eliminator";
  }

  StatusOr<bool> Run(
      HloModule* module,
      const absl::flat_hash_set<absl::string_view>& execution_threads) override;
};

}  // namespace spmd
}  // namespace xla

#endif  // TENSORFLOW_COMPILER_XLA_SERVICE_SPMD_REDUNDANT_SLICE_ELIMINATOR_H_
